package com.steleot.jetpackcompose.playground

object MainNavRoutes {
    const val Main = "main"
    const val Animation = "animation"
    const val ConstraintLayout = "constraint layout"
    const val Foundation = "foundation"
    const val FoundationLayout = "foundation layout"
    const val Material = "material"
    const val MaterialIcons = "material icons"
    const val MaterialIConsExtended = "material icons extended"
    const val Runtime = "runtime"
    const val Ui = "ui"
    const val ViewModel = "view model"
    const val ExternalLibraries = "external libraries"
}

object AnimationNavRoutes {
    const val Animatable = "animatable"
    const val AnimatedValues = "animated values"
    const val AnimatedVisibility = "animated visibility"
    const val AnimationModifier = "animation Modifier"
    const val CrossfadeAnimation = "crossfade animation"
    const val GestureAnimation = "gesture animation"
    const val InfiniteTransition = "infinite transition"
    const val RotatingShape = "rotating shape"
    const val SingleValueColorAnimation = "single value color animation"
    const val SingleValueFloatAnimation = "single value float animation"
    const val SuspendAnimation = "suspend animation"
}

object FoundationNavRoutes {
    const val Background = "background"
    const val Border = "border"
    const val Canvas = "canvas"
    const val Clickable = "clickable"
    const val DragGestureDetector = "drag gesture detector"
    const val Draggable = "draggable"
    const val Focusable = "focusable"
    const val Image = "image"
    const val InteractionSource = "interaction source"
    const val LazyColumn = "lazy column"
    const val LazyGrid = "lazy grid"
    const val LazyRow = "lazy row"
    const val Scrollable = "scrollable"
    const val Scroller = "scroller"
    const val Shape = "shape"
    const val Toggeable = "toggeable"
    const val TransformGesture = "transform gesture"
    const val Transformable = "transformable"
}

object FoundationLayoutNavRoutes {
    const val AspectRatio = "aspect ratio"
    const val Box = "box"
    const val BoxWithConstraints = "box with constraints"
    const val Column = "column"
    const val Intrinsic = "intrinsic"
    const val Offset = "offset"
    const val Padding = "padding"
    const val Row = "row"
    const val Size = "size"
    const val Spacer = "spacer"
}

object MaterialNavRoutes {
    const val AlertDialog = "alert dialog"
    const val BackdropScaffold = "backdrop scaffold"
    const val BottomAppBar = "bottom app bar"
    const val BottomDrawerLayout = "bottom drawer layout"
    const val BottomNavigation = "bottom navigation"
    const val BottomSheetScaffold = "bottom sheet scaffold"
    const val Button = "button"
    const val Card = "card"
    const val Checkbox = "checkbox"
    const val Divider = "divider"
    const val DropdownMenu = "dropdown menu"
    const val FloatingActionButton = "floating action button"
    const val ExtendedFloatingActionButton = "extended floating action button"
    const val Elevation = "elevation"
    const val IconButton = "icon button"
    const val IconToggleButton = "icon toggle button"
    const val Icon = "icon"
    const val ModalBottomSheetLayout = "model bottom sheet layout"
    const val ModalDrawerLayout = "model drawer layout"
    const val ListItem = "list item"
    const val LocalContentAlpha = "local content alpha"
    const val LocalContentColor = "local content color"
    const val OutlinedTextField = "outlined text field"
    const val Progress = "progress"
    const val RadioButton = "radio button"
    const val Scaffold = "scaffold"
    const val ScrollableTabRow = "scrollable Tab row"
    const val Slider = "slider"
    const val SnackBar = "snackBar"
    const val Surface = "surface"
    const val Swipeable = "swipeable"
    const val SwipeToDismiss = "swipe to dismiss"
    const val Switch = "switch"
    const val TabRow = "tab row"
    const val TextField = "text field"
    const val TopAppBar = "top app bar"
    const val TriStateCheckbox = "tri state checkbox"
}

object MaterialIconsNavRoutes {
    const val Filled = "filled"
    const val Outlined = "outlined"
    const val Rounded = "rounded"
    const val Sharp = "sharp"
    const val TwoTone = "twotone"
}

object MaterialIconsExtendedNavRoutes {
    const val ExtendedFilled = "extended filled"
    const val ExtendedOutlined = "extended outlined"
    const val ExtendedRounded = "extended rounded"
    const val ExtendedSharp = "extended sharp"
    const val ExtendedTwoTone = "extended twotone"
}

object RuntimeNavRoutes {
    const val CollectAsState = "collect as state"
    const val CompositionLocal = "composition local"
    const val DerivedState = "derived state"
    const val DisposableEffect = "disposable effect"
    const val Immutable = "immutable"
    const val Key = "key"
    const val LaunchedEffect = "launched effect"
    const val MutableStateList = "mutableState list"
    const val MutableStateMap = "mutableState map"
    const val ProduceState = "produce state"
    const val RememberCoroutineScope = "remember coroutine scope"
    const val RememberSaveable = "remember saveable"
    const val RememberSaveableStateHolder = "remember saveable state holder"
    const val Remember = "remember"
    const val Saver = "saver"
    const val SideEffect = "side effect"
    const val SnapshotFlow = "snapshot flow"
}

object UiNavRoutes {
    const val AlignmentLine = "alignment line"
    const val Alpha = "alpha"
    const val AndroidViewBinding = "android view binding"
    const val AnimatedVector = "animated vector"
    const val AnnotatedString = "annotated string"
    const val Brush = "brush"
    const val Color = "color"
    const val DebugInspectorInfo = "debug inspector info"
    const val Drawable = "drawable"
    const val Font = "font"
    const val GraphicsLayer = "graphics layer"
    const val Layout = "layout"
    const val LocalAccessibilityManager = "local accessibility manager"
    const val LocalAutofill = "local autofill"
    const val LocalAutofillTree = "local autofill tree"
    const val LocalClipboardManager = "local clipboard manager"
    const val LocalConfiguration = "local configuration"
    const val LocalContext = "local context"
    const val LocalDensity = "local density"
    const val LocalFocusManager = "local focus manager"
    const val LocalFontLoader = "local font loader"
    const val LocalHapticFeedback = "local haptic feedback"
    const val LocalLayoutDirection = "local layout direction"
    const val LocalLifecycleOwner = "local lifecycle owner"
    const val LocalSavedStateRegistryOwner = "local saved state registry owner"
    const val LocalTextInputService = "local text input service"
    const val LocalTextToolbar = "local text toolbar"
    const val LocalUriHandler = "local uri handler"
    const val LocalViewConfiguration = "local view configuration"
    const val LocalWindowInfo = "local window info"
    const val OnGloballyPositioned = "on globally positioned"
    const val OnSizeChanged = "on size changed"
    const val PathEffect = "path effect"
    const val Popup = "popup"
    const val Primitive = "primitive"
    const val Rotate = "rotate"
    const val Scale = "scale"
    const val Shadow = "shadow"
    const val SoftwareKeyboardController = "software keyboard controller"
    const val SpanStyle = "span style"
    const val String = "string"
    const val SubComposeLayout = "sub compose layout"
    const val TextDecoration = "text decoration"
    const val TextIndent = "text indent"
    const val VisualTransformation = "visual transformation"
    const val ZIndex = "z index"
}

object ViewModelNavRoutes {
    const val Flow = "flow"
    const val LiveData = "live data"
    const val State = "state"
}

object ExternalLibrariesNavRoutes {
    const val Coil = "coil"
    const val Glide = "glide"
    const val Lottie = "lottie"
    const val Picasso = "picasso"
}
